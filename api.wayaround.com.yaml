swagger: '2.0'
info:
  version: '1.0.0'
  title: WayAround API
  description: WayAround API using OAuth2 Access Code Flow
  contact:
    name: Giancarlo Rhodes
    url: https://www.onshoreoutsourcing.com/
    email: giancarlo.rhodes@onshoreoutsourcing.com
 
# Under securityDefinitions we declare which security schemes can be used.
# These definitions do not affect to the operations, but can be applied
# using the 'security' key at the global level or the operation level.
# In this sample, we'll see how to apply the security definition globally,
# and override it at the operation level.
#
# Note that for Access Code Flow, you must provide the Token URL.
securityDefinitions:
  accessCode:
    type: oauth2
    # This should be updated to the Token URL of your OAuth provider.
    tokenUrl: http://example.com/oauth/token
    # This should be updated to the Authorization URL of your OAuth provider.
    authorizationUrl: http://example.com/oauth/auth
    flow: accessCode
    scopes:
      write: allows modifying resources
      read: allows reading resources

# Here we apply the security flow called 'accessCode' globally to all the operations in the spec. 
# This security scheme is defined above in the 'securityDefinitions' section.
# Global security can be overridden an operation level as seen in the example below
security:
  - accessCode:
    - read
    - write
paths:
  /account:
    # In this operation we do not apply the security, because it was applied globally above.
    # The security will be applied to this operation for that reason.
    post:
      summary: Attempt logging in with username and password
      operationId: trylogin
      description: Attempt login with form data username and password.  Example http://api.wayaround.com/v1/account/trylogin
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - name: username
          in: formData
          description: username used in login attempt
          required: true
          type: string
        - name: password
          in: formData
          description: user password user in login attempt
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized client
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
    get:
      summary: Get the user data by query string
      operationId: getuser
      description: Example http://api.wayaround.com/v1/account/getuser?userid=123456789
      produces:
        - application/json
      parameters:
        - in: query
          name: userid
          description: pass an optional userid
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized client
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /account/getuserbypath/{userid}:
    get:
      summary: Get the user data by path
      operationId: getuserbypath
      description: functionally the same as getuser but passing userid in path. Example http://api.wayaround.com/v1/account/getuserbypath/123456789 
      produces:
        - application/json
      parameters:
        - in: path
          name: userid
          description: pass an optional userid in url path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized client
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /account/getuserroles/{userid}:        
    get:
      summary: get the user roles
      operationId: getuserroles
      description: Example http://api.wayaround.com/v1/account/getuserroles/123456789
      produces:
        - application/json
      parameters:
        - in: path
          name: userid
          description: pass an optional userid in url path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserRoles'
        401:
          description: Unauthorized client
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
          
  /account/getuserorganizations/{userid}:        
    get:
      summary: get the user organizations
      operationId: getuserorganizations
      description: Example http://api.wayaround.com/v1/account/getuserorganizations/123456789
      produces:
        - application/json
      parameters:
        - in: path
          name: userid
          description: pass an optional userid in url path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserOrganizations'
        401:
          description: Unauthorized client    
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /waytag:
    get:
      summary: search the waytag documents
      operationId: search
      description:  Example http://api.wayaround.com/v1/waytag/search?organizationid=abc&siteid=1234&userid=123456789&descripiton=search+for+this+content
      produces:
        - application/json
      parameters:
        - in: query
          name: organizationid
          description: pass an optional organizationid
          required: true
          type: integer
        - in: query
          name: siteid
          description: pass an optional siteid
          required: false
          type: integer
        - in: query
          name: userid
          description: pass an optional userid
          required: false
          type: integer
        - in: query
          name: doctype
          description: pass an optional doctype
          required: false
          type: string
        - in: query
          name: name
          description: pass an optional name
          required: false
          type: string
        - in: query
          name: description
          description: pass an optional description
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResultWayTags'
        401:
          description: Unauthorized client
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /waytag/getwaytag/{uuid}:        
    get:
      summary: get a single waytag
      operationId: getwaytag
      description: Example http://api.wayaround.com/v1/waytag/getwaytag/123456789
      produces:
        - application/json
      parameters:
        - in: path
          name: uuid
          description: pass an optional uuid in url path
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WayTag'
        401:
          description: Unauthorized client    
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /waytag/updatewaytag/{uuid}:   
    put:
      summary: update an existing waytag
      operationId: updatewaytag
      description: This operation updates an existing waytag with new data. Example http://api.wayaround.com/v1/waytag/updatewaytag/123456789
      consumes:
        - application/json
      parameters:
        - in: body
          name: waytagdetails
          description: the updated waytag body data in JSON format
          required: true
          schema:
            $ref: '#/definitions/WayTag'
        - in: path
          name: uuid
          description: the uuid of the waytag to update in the url
          required: true
          type: integer
      responses:
        200: 
          description: OK
        401:
          description: Unauthorized client    
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /waytag/deletewaytag/{uuid}:
    delete:
      summary: delete an existing waytag
      operationId: deletewaytag
      description: This operation deletes an existing waytag.
      produces:
        - application/json
      parameters:
        - in: path
          name: uuid
          description: the uuid of the waytag to delete. http://api.wayaround.com/v1/waytag/deletewaytag/123456789
          required: true
          type: integer
      responses:
        200: 
          description: OK
          schema:
            $ref: '#/definitions/WayTag'
        401:
          description: Unauthorized client    
        404:
          description: Resource Not Found
        500:
          description: Internal Server Error
  /ping:
    get:
      summary: Server heartbeat operation
      description: This operation shows how to override the global security defined above, as we want to open it up for all users.
      # We want to require no security schemes and override the globally define security scheme.
      # To do that, we simply provide an empty array to the 'security' property.
      security: [ ]
      responses:
        200:
          description: OK
definitions:
  WayTag:
    type: object
    properties:
      organizationid:
        type: integer
      siteid:
        type: integer
      ownerid:
        type: integer
      uuid:
        type: integer
      doctype:
        type: string
      name:
        type: string
      description:
        type: string
  SearchResultWayTags:
    type: object
    properties:
      waytags:
        type: array
        items:
          type: object
          properties:
            organizationid:
              type: integer
            siteid:
              type: integer
            ownerid:
              type: integer
            uuid:
              type: integer
            doctype:
              type: string
            name:
              type: string
            description:
              type: string
  UserRoles:
    type: object
    properties:
      roles:
        type: array
        items:
          type: object
          properties:
            rolename:
              type: string
  UserOrganizations:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          properties:
            organizationname:
              type: string
            organizationnid:
              type: integer
  User:
    type: object
    properties:
      userid:
        type: integer
      userName:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      roles:
        type: array
        items:
          type: object
          properties:
            role:
              type: string
host: api.wayaround.com
basePath: /v1
schemes: 
  - http
  - https